// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  name       String?
  role       Role         @default(ADMIN)
  password   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  notes      Notes[]
  todos      Todo[]
  messages   Message[]
  newsletter Newsletter[]
  Session    Session[]

  Blog Blog[]

  Post Post[]
}

model Notes {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
model ContactForm{
  id        String   @id @default(cuid())
  name      String
  email     String
  company_name   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Todo {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Blog {
  id        String   @id @default(cuid())
  title     String
  content   String
  category  String
  excerpt   String
  slug      String
  href      String
  image     String
  feature   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
model Post{
  id        String   @id @default(cuid())
  title     String
  content   String
  category  String
  excerpt   String
  slug      String
  href      String
  image     String
  feature   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
